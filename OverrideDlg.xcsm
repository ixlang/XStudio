//xlang Source, Name:OverrideDlg.xcsm 
//Date: Tue Feb 00:33:49 2019 

class OverrideDlg : QDialog {

	int addType = 0;
    QPushButton btnAdd, btnClose;
    QTreeWidget _treeview;
    //Project currentProject;
    XIntelliSense.XIntelliResult [] result;
    XSourceEditor editwnd;
    long editpos;
    
    String prefix = "";
        
    Map<String, long> expand_data = new Map<String, long>();

        
    public void onAttach()override{ 
    
        setWindowFlags(Constant.CustomizeWindowHint | Constant.WindowCloseButtonHint);
        
        //setFixedSize(width(), height());
        
        btnAdd = (QPushButton)attachByName(new QPushButton(), "btnAdd");
        btnClose = (QPushButton)attachByName(new QPushButton(), "btnClose");
        
        //checkListener
        _treeview = (QTreeWidget)attachByName(new QTreeWidget(), "treeWidget");
        
        /*if (currentProject == nilptr){
			close();
			QMessageBox.Critical("注意", "当前没有载入项目", QMessageBox.Ok, QMessageBox.Ok);
            return ;
        }*/
        
        btnAdd.setOnClickListener(
        new onClickListener(){
            void onClick(QObject obj, bool checked)override{
            
				String def ="";
				long [] items = _treeview.getTopItems();
                if (items != nilptr){
                    for (int i = 0; i < items.length; i++){
                        if (_treeview.isItemCheck(items[i], 0)){
                            def = def + "\n\t" + _treeview.getItemText(items[i],1) + "override{\n\t\t//TODO \n\t}\n\n";
                        }
                    }
                }
                editwnd._sci.insertText(editpos, def);
                close();
            }
        });
        
        btnClose.setOnClickListener(
        new onClickListener(){
            void onClick(QObject obj, bool checked)override{
				close();
            }
        });
         
		setWindowTitle("重写方法");

        setModal(true);
        
        show();
        
        
        String []columns = {"名称", "方法"};
        
        _treeview.setColumns(columns);
        _treeview.setColumnWidth(0,300);
        _treeview.setColumnWidth(1,400);
        
        
        loadObject(result);
        
         /*setOnLayoutEventListener(new onLayoutEventListener(){
			void onResize(QObject obj, int w, int h, int oldw, int oldh)override {
				_treeview.resize(w - 40, h-  210);
                
                edtName.resize(w - 90, 20);
                edtFile.resize(w - 90, 20);
                
				btnOk.move(w - 190, h - 35);
				btnCancel.move(w - 100, h - 35);
			}
        });*/
        
    }


    public String getFunctionDefine(@NotNilptr XIntelliSense.XIntelliResult proc){
		String txt = nilptr;
		if (proc.get_class() != nilptr){
            XIntelliSense.XIntelliResult cls = proc.get_class();
            if (cls != nilptr){
                txt = cls.get_name();
            }
        }
        if (proc.hasProp('C') || proc.hasProp('S')){
			return nilptr;
        }
        if (txt == nilptr || txt.length() == 0){
			return nilptr;
        }
        
        txt = txt + " " + proc.get_name() + "(";
        
        XIntelliSense.XIntelliResult [] params = proc.get_params();
        if (params != nilptr){
            for (int i =0; i < params.length; i++){
                XIntelliSense.XIntelliResult param = params[i];
                if (param != nilptr ){
                    if (param.get_class() != nilptr){
                        if (i != 0){
                            txt = txt + ",";
                        }
                        XIntelliSense.XIntelliResult _pclass = param.get_class();
                        
                        if (_pclass != nilptr){
                            txt = txt + _pclass.get_name() + " " + param.get_name();
                        }
                    }
                }else{
                    return nilptr;
                }
            }
        }
        txt = txt + ")";
        return txt;
    }
    
    public void loadObject(@NotNilptr XIntelliSense.XIntelliResult [] res){
		for (int i =0, c = res.length; i < c; i++){
			XIntelliSense.XIntelliResult obj = res[i];
            
            if (obj != nilptr){
                int type = obj.get_type();
                
                long item = 0;
                if (type == 23){
                    String txt = getFunctionDefine(obj);
                    if (txt != nilptr){
                        Map.Iterator<String, long> iter = expand_data.find(txt);
                        
                        if (iter == nilptr){
                            item = _treeview.addItem("res/toolbar/function.png", obj.get_name());
                            _treeview.setItemText(item,1,txt);
                            expand_data.put(txt,item);
                        }else{
                            item = iter.getValue();
                            if (item != 0){
                                _treeview.setItemText(item,0,obj.get_name()  + "(已存在)");
                            }
                        }
                    }
                }
                if (item != 0){
                    _treeview.modifyItemFlags(item, QTreeWidget.ItemIsUserCheckable, 0);
                    _treeview.setItemCheck(item, 0, false);
                }
            }
		}
	}
    
    public static void requesOverrideObject(XSourceEditor wnd, long pos, XIntelliSense.XIntelliResult [] res){
		QDialog newDlg = new QDialog();
        
        if (newDlg.load(UIManager.getUIData(__xPackageResource("ui/override.ui"))) == false){
            return ;
        }
        
        OverrideDlg wizard = new OverrideDlg();	
        wizard.result = res;
        wizard.attach(newDlg);
        wizard.editwnd = wnd;
        wizard.editpos = pos;
    }
  
};