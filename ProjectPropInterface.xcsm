


interface ProjectPropInterface{
    bool setValue(Project object, Configure configure, String key, String value);
    String getValue(Project object, Configure configure,  String key);
    bool build(IBuilder builder, Project object, Configure configure, Object param);
    void cleanup(IBuilder builder, Project object, Configure configure);
    void debugRun(IBuilder builder, Project proj, Configure conf);
    void Run(IBuilder builder, Project proj, Configure conf); 
	void stopRun();
    String generateMake(Project object, Configure configure);
	bool create(WizardLoader loader, String projectName, String projectDir, String uuid, Project object, bool isAddToProject, String userType);
    JsonObject getProperitiesConfigure();
    Stream createDebugPipe(String host, int ip);
    Stream getDebugPipe();
    IXIntelliSense allocIntelliSense(Project project, Configure cfg);
    String [] generatorCompArgs(Project object, Configure configure, String sourfile);
    ICompileInfo parseOutputLine(QScintilla sci, int position, int line, String lineText);
    void stopBuild(IBuilder builder);
    void onProjectSettingChange(Project object);
    IXPlugin getXPlugin();
    void customDebug();
    String getDebuggeeDescription();
    JsonArray getExternLibs(Configure);
    String getFileExtensionFilter();
    @NotNilptr String map_variable(Project object, @NotNilptr  Configure configure,@NotNilptr  String text) ;
};