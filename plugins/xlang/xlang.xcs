//xlang 
using{
    Qt;
};
class XLANGPlugManager{

	public static IXStudioController xcontroller;

	public static class XLangPlugin : IXPlugin{
		public XTextEditor textPlugin = new XTextEditor();
        
		String getName() override {
			return "xlang";
		}
        
        ActionIdent [] getSolutionContextActions(){
            return nilptr;
        }
        
        ActionIdent [] getClassViewContextActions(){
            return nilptr;
        }
        
        void updateSolutionActionState(String files){
            
        }
        
        void updateClassViewActionState(String file, ClassViewInfo info){
            
        }
        
		void onTextEditorCreated(TextEditorController )override{
		
		}
        
		IProjectPlugin getProjectPlugin()override{
            return nilptr;
        }
		void onTextEditorClosed(TextEditorController )override{
		
		}
		
		bool initializPlusin(IXStudioController controller, bool )override{
			xcontroller = controller;
            return true; 
		}
        
        TextEditorPlugin getTextEditorPlugin()override{
			return textPlugin;
        }
        
        IProject loadProject(JsonObject , String )override{
			return nilptr;
        }
        
        void onMenuTrigged(String )override{
        
        }
        String getIcon()override{
            return "res/package64.png";
        }
        bool onExit()override{
            return true;
        }
        
        long getVersion()override{
            return 1001;
        } 
        String getDescrition()override{
            return "xlang 基础开发扩展.";
        }
        String publisher()override{
            return "https://github.com/ixlang/xlibraries";
        }
        void uninstall(IXStudioController)override{
            
        }
        String getSetting()override{
            return nilptr;
        }
        void settingFlushed()override{}
        void showDocks(bool )override{}
	};
    
    /*static void output(String text){
		if (xcontroller != nilptr){
			xcontroller.getWorkspace().output(text, 0);
        }
    }*/
};


void _entry(int , int ){
    PluginManager.registryPlugins(new XLANGPlugManager.XLangPlugin());
}