
class Windows : QDialog
{
    public XWorkspace  _workspace;
    QTreeWidget _listview;
    Map<long, DocumentView> windows_list = new Map<long, DocumentView>();

    QPushButton btnOk;
    QPushButton btnActive;
    QPushButton btnClose;
    static QRect rect = nilptr;

    onTreeViewItemEvent listlistener = new onTreeViewItemEvent()
    {
        void onItemClicked(@NotNilptr QTreeWidget tree,long item, int column)override {
            long [] items = tree.getSelectedItems();
            if (items != nilptr){
                btnActive.setEnabled(items.length == 1);
            }
        }
        void onItemDoubleClicked(QTreeWidget,long item, int column) {
            try {
                DocumentView editor = windows_list.get(item);
                if (editor != nilptr) {
                    _workspace.setActiveSubWindow(editor);
                    Windows.this.close();
                }
            } catch(Exception e) {

            }

        }
    };

    void onAttach()
    {

        setWindowFlags(Constant.CustomizeWindowHint | Constant.WindowMinMaxButtonsHint | Constant.WindowCloseButtonHint);

        _listview = (QTreeWidget)attachByName(new QTreeWidget(), "listWindow");

        btnOk = (QPushButton)attachByName(new QPushButton(), "btnOk");
        btnOk.setOnClickListener(
        new onClickListener() {
            void onClick(QObject obj, bool checked)override {
                Windows.this.close();
            }
        });

        btnActive = (QPushButton)attachByName(new QPushButton(), "btnActive");
        btnActive.setOnClickListener(
        new onClickListener() {
            void onClick(QObject obj, bool checked)override {
                long [] items = _listview.getSelectedItems();
                if (items != nilptr && items.length == 1) {
                    try {
                        DocumentView editor = windows_list.get(items[0]);
                        if (editor != nilptr) {
                            _workspace.setActiveSubWindow(editor);
                            Windows.this.close();
                        }
                    } catch(Exception e) {

                    }
                }
            }
        });

        btnClose = (QPushButton)attachByName(new QPushButton(), "btnClose");
        btnClose.setOnClickListener(
        new onClickListener() {
            void onClick(QObject obj, bool checked)override {
                long [] items = _listview.getSelectedItems();
                if (items != nilptr){
                    for (int i =0; i < items.length; i++) {
                        try {
                            DocumentView editor = windows_list.get(items[i]);
                            if (editor != nilptr) {
                                editor.close();
                            }
                        } catch(Exception e) {

                        }
                    }
                    loadWindow();
                    _workspace.updateDocumentStatus();
                }
            }
        });

        _listview.setOnTreeViewItemEvent(listlistener);

        String [] columns = {"名称", "路径"};
        _listview.setColumns(columns);

        loadWindow();

        /*setOnLayoutEventListener(new onLayoutEventListener(){
        	void onResize(QObject obj, int w, int h, int oldw, int oldh)override {
        		_listview.resize(w - 200, h-  50);
        		btnOk.move(w - 150, h - 80);

        		btnActive.move(w - 150, 20);

        		btnClose.move(w - 150, 60);
        	}
        });*/
        setWindowIcon("./res/toolbar/winoverlap.png");
        setWindowTitle("窗口");
        if (rect != nilptr){
            move(rect.left,rect.top);
            resize(rect.right,rect.bottom);
        }
        setModal(true);
        show();
    }
    public bool onClose(){
        rect = new QRect(x(), y(), width(), height());
        return true;
    }
    void loadWindow()
    {
        /* _system_.consoleWrite("loadWindow");*/
        windows_list.clear();
        _listview.clear();
        Map.Iterator<String, DocumentView> iter = DocumentView.editorMgr.iterator();

        while (iter.hasNext()) {
            //String key = iter.getKey();
            DocumentView val = iter.getValue();

            iter.next();

            if (val != nilptr){
                long item = _listview.addItem("./res/toolbar/source.png", val.getTitle());

                windows_list.put(item, val);

                if (val.getFilePath().startWith("#")) {
                    _listview.setItemText(item, 1, "<未保存>");
                } else {
                    _listview.setItemText(item, 1, val.getFilePath());
                }
            }
        }
    }
};